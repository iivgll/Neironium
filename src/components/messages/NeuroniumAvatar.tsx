"use client";
import React, { useEffect, useRef, useState } from "react";
import Lottie, { LottieRefCurrentProps } from "lottie-react";
import { Box } from "@chakra-ui/react";

interface NeuroniumAvatarProps {
  isAnimating?: boolean;
  size?: number;
}

const NeuroniumAvatar: React.FC<NeuroniumAvatarProps> = ({
  isAnimating = false,
  size = 50,
}) => {
  const [animationData, setAnimationData] = useState<any>(null);
  const lottieRef = useRef<LottieRefCurrentProps>(null);
  const [isReady, setIsReady] = useState(false);

  useEffect(() => {
    fetch("/animation/neuronium.json")
      .then((response) => response.json())
      .then((data) => {
        console.log("‚úÖ Lottie animation loaded");
        setAnimationData(data);
      })
      .catch((error) => console.error("‚ùå Failed to load animation:", error));
  }, []);

  // –£–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–µ–π –∫–æ–≥–¥–∞ –æ–Ω–∞ –≥–æ—Ç–æ–≤–∞
  useEffect(() => {
    if (!lottieRef.current || !isReady) return;

    if (isAnimating) {
      console.log("‚ñ∂Ô∏è Starting animation");
      lottieRef.current.play();
    } else {
      console.log("‚è∏Ô∏è Pausing animation");
      lottieRef.current.pause();
    }
  }, [isAnimating, isReady]);

  if (!animationData) {
    return null; // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏—á–µ–≥–æ –ø–æ–∫–∞ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
  }

  return (
    <Box width={`${size}px`} height={`${size}px`}>
      <Lottie
        lottieRef={lottieRef}
        animationData={animationData}
        loop={true}
        autoplay={true}
        style={{ width: size, height: size }}
        onComplete={() => console.log("üîÑ Animation loop complete")}
        onLoopComplete={() => console.log("üîÅ Loop iteration complete")}
        onDOMLoaded={() => {
          console.log("üé¨ Lottie DOM loaded");
          setIsReady(true);
          // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å—Ä–∞–∑—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          if (isAnimating && lottieRef.current) {
            lottieRef.current.play();
          }
        }}
      />
    </Box>
  );
};

export default NeuroniumAvatar;
